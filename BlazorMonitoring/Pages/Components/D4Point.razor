@using FM4017Library.Dtos
@using FM4017Library.Helpers


<div class="alert" style="background-color:white; text-align:center; border-radius: 30px">

    @*Name*@
    <h5 class="py-2">@Prettify.Name(Name)</h5>

    @*Value unit*@
    @if (LastUniqueSignals != null)
        {
            @foreach (var signal in LastUniqueSignals)
            {
                <h2>@signal.Data?.RawValue @Prettify.Unit(signal.Unit)</h2>
            }
        }
    
    @*Last updated*@
    Updated: @Updated <br />

        @*Display on/off*@
    <div class="controlRow">
        @if (ShowImage)
        {
            <button class="btn btn-secondary" style="margin: 2px" @onclick="(() => ShowImage = !ShowImage)">Image</button>
        }
        else
        {
            <button class="btn btn-primary" style="margin: 2px" @onclick="(() => ShowImage = !ShowImage)">Image</button>
        }
        @if (ShowChart)
        {
            <button class="btn btn-secondary" style="margin: 2px" @onclick="(() => ShowChart = !ShowChart)">Chart</button>

        }
        else
        {
            <button class="btn btn-primary" style="margin: 2px" @onclick="(() => ShowChart = !ShowChart)">Chart</button>
        }
        @if (ShowStats)
        {
            <button class="btn btn-secondary" style="margin: 2px" @onclick="(() => ShowStats = !ShowStats)">Stats</button>

        }
        else
        {
            <button class="btn btn-primary" style="margin: 2px" @onclick="(() => ShowStats = !ShowStats)">Stats</button>
        }
        @if (ShowLocation)
        {
            <button class="btn btn-secondary" style="margin: 2px" @onclick="(() => ShowLocation = !ShowLocation)">Location</button>
        }
        else
        {
            <button class="btn btn-primary" style="margin: 2px" @onclick="(() => ShowLocation = !ShowLocation)">Location</button>
        }
    </div>
    

    @*line*@
    @if (ShowImage || ShowChart)
    {
        <hr class="border border-primary border-3 opacity-25">
    }

    @*Image*@
    @if (ShowImage)
    {
        <a target="_blank" href="@ImageUrl"><img src=@ImageUrl class="img-fluid"></a>
    }
    
    @*Chart*@
    @if (ShowChart)
    {
        <SignalChart SignalNodes="@(MyPoint?.Signals?.SignalNodes)"></SignalChart>   
    }

    @*Stats*@
    @if (ShowStats)
    {
        <SignalStats SignalNodes="@(MyPoint?.Signals?.SignalNodes)"></SignalStats>
    }
    
    @if (ShowLocation)
    {
        @*line*@
        <hr class="border border-primary border-3 opacity-25">

        <p>Location:
        <br/>
        Longitude: @Longitude Latitude: @Latitude 
        
        @if (Latitude != null && Longitude != null)
        {
            <br />
            <a target="_blank" href="https://www.google.com/maps/dir/?api=1&travelmode=driving&destination=@Longitude,@Latitude "><span class="oi oi-location">Show on map</span></a>
        }
        </p>
    }

    
    

</div>


@code {
    ////// Todo Slettes, kun for test
    bool overrideImageUrl = true;


    public bool ShowImage { get; set; } = false;
    public bool ShowChart { get; set; } = true;
    public bool ShowStats { get; set; } = false;
    public bool ShowLocation { get; set; } = true;


    [Parameter]
    public PointNode? MyPoint { get; set; }

    private string? Latitude
    {
        get { return MyPoint?.Metadata?.Latitude?.ToString("0.###"); }
    }

    private string? Longitude
    {
        get { return MyPoint?.Metadata?.Longitude?.ToString("0.###"); }
    }

    private string? Updated
    {
        get 
        {
            var localTime = DateTimeHelpers.UtcTime2Local(MyPoint?.Signals?.SignalNodes?.LastOrDefault()?.Timestamp);
            var formattedTime = DateTimeHelpers.DateTimePrintFormatter(localTime);
            return formattedTime;
        }
    }

    private string? ImageUrl
    {
        get 
        { 
            if (MyPoint?.Id == "63230e49eac7b9be6beb2983" && overrideImageUrl)
            {
                return "https://www.adeunis.com/wp-content/uploads/2020/07/temperature-capteur-iot-lorawan-sigfox-lpwan-adeunis-temp.jpg";
            }
            if (MyPoint?.Id == "63230f2eeac7b9f938eb29b1" && overrideImageUrl)
            {
                return "https://www.adeunis.com/wp-content/uploads/2018/10/TEMPERATURE-HUMIDITE3.jpg";
            }

            return MyPoint?.Metadata?.ImageUrl; 
        }
    }

    private string? Name
    {
        get { return MyPoint?.Name; }
    }

    private string? Unit
    {
        get { return MyPoint?.Signals?.SignalNodes?.LastOrDefault()?.Unit; }
    }

    private List<SignalNode>? LastUniqueSignals
    {
        get {
            List<SignalNode>? result = new();

            // find # unique
            List<SignalNode>? uniqueUnitSignals = MyPoint?.Signals?.SignalNodes?.DistinctBy(t => t.Unit).ToList();

            if (uniqueUnitSignals != null)
            {
                // get last (newest) signalnode of each unique unit
                foreach (var u in uniqueUnitSignals)
                {
                    var a = MyPoint?.Signals?.SignalNodes?.FindLast(t => t.Unit == u.Unit);

                    // add to result if not null
                    if (a != null)
                    {
                        result.Add(a);
                    }
                }
            }

            return result; 
        }
    }


}

