@using FM4017Library.Dtos
<h5>Points in selected Space </h5>
Selected Point: @SelectedPoint?.Name (id: @SelectedPoint?.Id)

@*Timestamp child test: @ChildSelectedSignal?.Timestamp*@


<table class="table table-striped table-light table-hover">
    <thead>
        <tr>
            <th>Name</th>
            <th>Id</th>
            @*<th>Parent Space Id</th>*@
            <th>Created At</th>
            <th>Updated At</th>
            <th>Last Value</th>
            <th>Last Unit</th>
            <th>Signal Strength</th>
            <th>SNR</th>
            <th>Latitude</th>
            <th>Longitude</th>
            <th>Signals</th>
            <th>Image Url</th>
        </tr>
    </thead>
    <tbody>
        @if (Points != null)
        {
            @foreach (var point in Points)
            {
                <tr @onclick="() => ChangeSelectedPoint(point)">
                    <td>@point.Name</td>
                    <td>@point.Id</td>
                    @*<td>@point.SpaceId</td>*@
                    <td>@point.CreatedAt</td>
                    <td>@point.UpdatedAt</td>
                    <td>@point?.Signals?.SignalNodes?.LastOrDefault()?.Data?.RawValue</td>
                    <td>@point?.Signals?.SignalNodes?.LastOrDefault()?.Unit </td>
                    <td>@point?.Signals?.SignalNodes?.LastOrDefault()?.Metadata?.SignalStrength </td>
                    <td>@point?.Signals?.SignalNodes?.LastOrDefault()?.Metadata?.Snr </td>
                    <td>@point?.Metadata?.Latitude?.ToString("0.###")</td>
                    <td>@point?.Metadata?.Longitude?.ToString("0.###")</td>
                    <td>@point?.Signals.SignalNodes.Count</td>
                    @*<td>@point?.Metadata?.ImageUrl?</td>*@

                </tr>
            }
        }
    </tbody>
</table>

<br />
<br />
<SignalTable Signals="SelectedPoint?.Signals?.SignalNodes" @bind-SelectedSignal="BoundValue"></SignalTable>


@code {
    [Parameter]
    public List<PointNode>? Points { get; set; }

    [Parameter]
    public PointNode? SelectedPoint { get; set; }

    [Parameter]
    public EventCallback<PointNode> SelectedPointChanged { get; set; }

    private async Task ChangeSelectedPoint(PointNode point)
    {
        await SelectedPointChanged.InvokeAsync(point);
    }

    // chain bind from child
    [Parameter]
    public SignalNode? ChildSelectedSignal { get; set; }

    [Parameter]
    public EventCallback<SignalNode> ChildSelectedSignalChanged { get; set; }

    private SignalNode? BoundValue
    {
        get => ChildSelectedSignal;
        set => ChildSelectedSignalChanged.InvokeAsync(value);
    }

    private async Task ChangeSelectedSignal(SignalNode signal)
    {
        await ChildSelectedSignalChanged.InvokeAsync(ChildSelectedSignal);
    }

}
