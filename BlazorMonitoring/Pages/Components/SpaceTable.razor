@using FM4017Library.Dtos
@using FM4017Library.Helpers

<div class="controlRow">
    <button class="btn btn-primary" @onclick=Home>Home</button>
    <button class="btn btn-primary" @onclick=Up>Up</button>
    <br />
    <br />
</div>






<h5>Subspaces in selected Space</h5>
Selected Space: @_selectedSpace?.Name @*(id: @_selectedSpace?.Id)*@

<table class="table table-striped table-light table-hover">
    <thead class="table-dark">
        <tr>
            <th>Name</th>
            <th>Id</th>
            <th>Created At</th>
            <th>Updated At</th>
            <th>Latitude</th>
            <th>Longitude</th>
            <th>Sub Spaces</th>
            <th>Points</th>
            <th>Image</th>
            <th>Edit</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody>
        @if (Spaces != null)
        {
            @foreach (var space in Spaces.Where(s => s.Parent?.Id == _selectedSpace?.Id))
            {
                <tr >
                    <td @onclick="() => _selectedSpace = space">@space.Name</td>
                    <td @onclick="() => _selectedSpace = space">@space.Id</td>
                    <td @onclick="() => _selectedSpace = space">@DateTimeHelpers.DateTimePrintFormatter(DateTimeHelpers.UtcTime2Local(space.CreatedAt))</td>
                    <td @onclick="() => _selectedSpace = space">@DateTimeHelpers.DateTimePrintFormatter(DateTimeHelpers.UtcTime2Local(space.UpdatedAt))</td>
                    <td @onclick="() => _selectedSpace = space">@space.Metadata?.Latitude?.ToString("0.###")</td>
                    <td @onclick="() => _selectedSpace = space">@space.Metadata?.Longitude?.ToString("0.###")</td>
                    <td @onclick="() => _selectedSpace = space">@Spaces.Count(s => s.Parent?.Id == space.Id)</td>
                    <td @onclick="() => _selectedSpace = space">@space.Points?.PointNodes?.Count</td>
                    <td>
                    @if (!string.IsNullOrEmpty(space?.Metadata?.ImageUrl))
                    {
                        <a target="_blank" href="@space?.Metadata?.ImageUrl?">Show</a>
                    }
                    </td>
                    <td><SpaceModalEdit Space="space" /></td>
                    <td><SpaceModalDelete Space="space" /></td>
                </tr>
            }
        }
    </tbody>
</table>
<SpaceModalCreate ParentSpace="_selectedSpace" />

<br />
<br />
<PointTable 
Points="Spaces?.Find(s => s.Id == _selectedSpace?.Id)?.Points?.PointNodes"
@bind-SelectedPoint="_childSelectedPoint" 
@bind-ChildSelectedSignal="_childSelectedSignal" />


@code {

    // Input to component
    [Parameter]
    public List<SpaceNode>? Spaces { get; set; }

    private SpaceNode? _selectedSpace;
    private PointNode? _childSelectedPoint;
    private SignalNode? _childSelectedSignal;

    private void Up()
    {
        // select parent
        _selectedSpace = Spaces?.Find(s => s.Id == _selectedSpace?.Parent?.Id);
        // Remove selections
        _childSelectedPoint = null;
        _childSelectedSignal = null;
    }

    private void Home()
    {
        // Remove selections
        _selectedSpace = null;
        _childSelectedPoint = null;
        _childSelectedSignal = null;
    }
}
