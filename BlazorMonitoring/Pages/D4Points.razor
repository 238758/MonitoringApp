@page "/"
@using BlazorMonitoring.Pages.Components
@using FM4017Library.Dtos
@using System.ComponentModel
@inject IConfiguration config
@inject DataAccessService dataAccess

@*
@inject DataSimulatorService dataSim
*@

@if (dataAccess?.SpaceNodes is null)
{
    <p><em>Loading...</em></p>
}

else
{
    @if (ShowPointsWithoutSignals)
    {
        <button class="btn btn-secondary" @onclick="(() => ShowPointsWithoutSignals = !ShowPointsWithoutSignals)">Show Points Without Signals</button>
    }
    else
    {
        <button class="btn btn-primary" @onclick="(() => ShowPointsWithoutSignals = !ShowPointsWithoutSignals)">Show Points Without Signals</button>
    }
    <br />
    <br />

    

    <div class="row">
        @foreach (var point in Points)
        {
            @if (point?.Signals?.SignalNodes?.FirstOrDefault() is not null || ShowPointsWithoutSignals)
            {
                <div class="col-md-4">
                    <D4Point Mypoint=@point></D4Point>
                </div>
            }  
        }
    </div>
}


@code {
    public bool ShowPointsWithoutSignals { get; set; } = false;

    public List<PointNode> Points 
    { 
        get
        {
            return GetPoints(dataAccess.SpaceNodes);
        }
    }

    protected override void OnInitialized()
    {
        dataAccess.PropertyChanged += PropertyHasChanged;
    }

    private void PropertyHasChanged(object? sender, PropertyChangedEventArgs args)
    {
        InvokeAsync(StateHasChanged);
    }


    // Get all points in nested space list
    private List<PointNode> GetPoints(List<SpaceNode>? spaceNodes)
    {
        List<PointNode> result = new();

        if (spaceNodes is not null)
        {
            foreach (var space in spaceNodes)
            {
                if (space?.Points?.PointNodes is not null)
                {
                    foreach (var point in space.Points.PointNodes)
                    {
                        result.Add(point);
                    }
                }
            }
        }

        return result;
    }
}
