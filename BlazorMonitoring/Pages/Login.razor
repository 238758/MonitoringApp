@page "/login"

<h3>Log In</h3>

@if (_showAuthenticationError)
{
    <div class="alert alert-danger" role="alert">
        <p>@_authenticationErrorText</p>
    </div>
}

<EditForm Model="model" OnValidSubmit="ExecuteLogin" class="card card-body bg-light mt-5">
    <DataAnnotationsValidator />
    @*<ValidationSummary />*@

    <div class="form-group row">
        <label for="email" class="col-md-auto col-form-label">Email:</label> 
        <div class="col-md-12">
            <InputText id="email" class="form-control" @bind-Value="model.Email" />
            <ValidationMessage For="@(() => model.Email)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="password" class="col-md-auto col-form-label">Password:</label>
        <div class="col-md-12">
            <InputText type="password" id="password" class="form-control" @bind-Value="model.Password" />
            <ValidationMessage For="@(() => model.Password)" />
        </div>
    </div>

    <div class="row">
        <div class="col-md-12 text-right">
            <button type="submit" style="margin: 10px 0 0 0" class="btn btn-primary">Log In</button>
        </div>
    </div>

</EditForm>

@if (ShowInvalidUser)
{
    <br />
    <p>Invalid user</p>
}

@code {
    private AuthenticationUserModel model = new();

    private bool _showAuthenticationError = false;
    private string? _authenticationErrorText = "";

    public bool ShowInvalidUser { get; set; } = false;




    private async Task ExecuteLogin()
    {
        _showAuthenticationError = false;

        if (model.Email != "231216@usn.no")
        {
            ShowInvalidUser = true;
        }
        
        
    }
}
